# Automação de Testes de UI com Cucumber e Cypress para DemoQA

Este projeto demonstra a automação de testes de interface do usuário para o website [https://demoqa.com/](https://demoqa.com/) utilizando as ferramentas Cucumber e Cypress. O objetivo é fornecer um exemplo simples e claro de como configurar e implementar testes automatizados com foco na legibilidade e colaboração.

## Estrutura do Projeto
![image](https://github.com/user-attachments/assets/77dbcb28-c99c-4f83-b57e-2cc3318c6730)

## Pré-requisitos

Antes de executar os testes, certifique-se de ter o seguinte instalado em sua máquina:

* **Node.js** (versão 16 ou superior recomendada): [https://nodejs.org/](https://nodejs.org/)
* **npm** (geralmente instalado com o Node.js) ou **yarn**: [https://yarnpkg.com/](https://yarnpkg.com/)

## Configuração e Execução

Siga estes passos para configurar e executar os testes:

1.  **Clone o repositório:**
    ```bash
    git clone <URL_DO_SEU_REPOSITORIO>
    cd demoqa-cypress-cucumber
    ```
    (Substitua `<URL_DO_SEU_REPOSITORIO>` pela URL do seu repositório no GitHub).

2.  **Instale as dependências:**
    ```bash
    npm install
    # ou
    yarn install
    ```

3.  **Abra a interface do Cypress:**
    ```bash
    npx cypress open
    # ou
    yarn cypress open
    ```
    Isso abrirá a janela do Cypress, onde você poderá ver e executar os testes visualmente.

4.  **Execute os testes em modo headless (sem interface gráfica):**
    ```bash
    npx cypress run
    # ou
    yarn cypress run
    ```
    Este comando executará todos os testes e exibirá os resultados no terminal.

## Próximos Passos

Para evoluir e manter a qualidade deste projeto de automação, os seguintes passos seriam necessários:

1.  **Cobertura de Mais Cenários de Teste:**
    * Identificar e automatizar outros fluxos de usuários e funcionalidades importantes do website DemoQA.
    * Criar novos arquivos `.feature` dentro da pasta `cypress/e2e/features` para descrever esses novos cenários de teste de forma clara e concisa.
    * Implementar os passos definidos nos novos arquivos `.feature` em arquivos `.js` correspondentes dentro da pasta `cypress/e2e/step_definitions`.

2.  **Refatoração do Código (Refactoring):**
    * **Remover Duplicação de Código:** Identificar e eliminar trechos de código repetidos nos arquivos de Step Definitions, tornando a manutenção mais fácil e o código mais limpo.
    * **Criação de Funções Utilitárias:** Extrair lógicas comuns (como navegação, preenchimento de campos específicos, etc.) para funções reutilizáveis em arquivos separados (e.g., `cypress/support/utils.js`).

3.  **Implementação do Padrão Page Object (Page Object Model - POM):**
    * **Criação de Classes de Página:** Desenvolver classes separadas (na pasta `cypress/e2e/pages`, por exemplo) que representam as páginas do website DemoQA. Cada classe deve conter:
        * **Seletores:** Definição de todos os elementos da página que serão interagidos nos testes (usando seletores CSS, XPath, etc.).
        * **Métodos:** Funções que encapsulam as interações com os elementos da página (e.g., `preencherNome()`, `clicarBotaoSubmit()`).
    * **Utilização nos Step Definitions:** Importar e utilizar as classes de página nos arquivos de Step Definitions, tornando os passos mais concisos, legíveis e independentes das mudanças na estrutura da página.

4.  **Melhorias na Gestão de Dados de Teste:**
    * Explorar estratégias para gerenciar dados de teste de forma mais eficiente (e.g., utilizando arquivos JSON na pasta `cypress/fixtures`, bibliotecas de geração de dados como Faker).
    * Implementar mecanismos para variar os dados de teste e cobrir diferentes casos de uso.

5.  **Implementação de Hooks (Ganchos):**
    * Utilizar os hooks do Cucumber (`Before`, `After`, `BeforeStep`, `AfterStep`) para configurar e limpar o estado do teste, realizar ações antes ou depois de cenários ou passos específicos.

6.  **Relatórios de Teste Aprimorados:**
    * Configurar e integrar ferramentas de geração de relatórios mais detalhados e visualmente atraentes (e.g., `cypress-mochawesome-reporter`).